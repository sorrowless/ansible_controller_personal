---
ansible_host: <redacted>
ansible_port: 22
ansible_user: <redacted>
ansible_become: true

# Hosts name
server_common_host:
  dns_hostname: "{{ ansible_host }}"
  packages:
    - atop
    - sysstat
    - iotop
    - iftop
    - python
    - git
    # We need these for building telegram sensu plugin
    - gcc
    - make
    - "g++"

# Iptables rules
iptables:
  # Beware about just opening rmq ports w/o firewalling them
  host_allowed_tcp_ports: [22, 80, 443, 909, 1027, 5671, 5672, 8080]
  flush_all: false

# LetsEncrypt vars
tls_host:
  type: acme
  acme_domains:
    - "{{ ansible_host }}"
    - "mail.{{ ansible_host }}"
    - "pa.mail.{{ ansible_host }}"
    - "metrics.{{ ansible_host }}"
    - "monitoring.{{ ansible_host }}"

# Prometheus vars
prometheus_server_config:
  docker:
    network_name: host
  victoriametrics:
    enabled: true
  prometheus:
    install_server: true
  alertmanager:
    enabled: true
    telegram_bot:
      enabled: true
      telegram_admin: <redacted>
      telegram_token: '<redacted>'
prometheus_clients_config:
  exporters_autossh_to_prometheus:
    enabled: true  # If enable, autossh will be installed and configured
    master_ssh_port: "{{ ansible_port }}"
  exporters:
    node_exporter:
      enabled: true
    grok_exporter:
      enabled: true
      create_user: true
      username: grokexporter
      exporters:
        - name: nginx_access
          # For config example look at https://github.com/fstab/grok_exporter/blob/master/example/config.yml
          config:
            global:
              config_version: 2
              retention_check_interval: 53s
            input:
              type: file
              path: /var/log/nginx/access.log
              readall: false
            grok:
              patterns_dir: /var/lib/grok_exporter/patterns
              additional_patterns: []
            metrics:
              - type: counter
                name: nginx_access_5xx
                help: Total number of 5xx errors in according access log
                match: '%{NGINX_ACCESS}'
                labels:
                  error_type: '5xx'
            server:
              host: localhost
              port: 9144
    blackbox_exporter:
      enabled: true
      probes_config:
        - scrape_params:
            module: [http_2xx]
          scrape_targets:
            - https://google.ru
          config_name: http
        - scrape_params:
            module: [icmp]
          scrape_targets:
            - 8.8.8.8
            - 1.1.1.1
          config_name: icmp

ssh_trust:
  master: false
  group: prometheus
  trust_user:
    create: true
    name: prometheus_client
    state: present
    comment: "Prometheus user to reverse ssh from slave nodes"
    shell: /bin/false

# Grafana vars
docker:
  network_name: host

# Nginx vars
nginx_sites:
  monitoring_http:
    - listen 80
    - server_name monitoring.{{ ansible_host }}
    - return 301 https://$host$request_uri
  monitoring_https:
    - listen 443 ssl
    - server_name monitoring.{{ ansible_host }}
    - gzip on
    - gzip_types *
    - ssl_certificate /etc/ssl_certs/{{ ansible_host }}/fullchain.pem
    - ssl_certificate_key /etc/ssl_certs/{{ ansible_host }}/private.pem
    - ssl_protocols TLSv1.1 TLSv1.2
    - ssl_session_cache shared:SSL:10m
    - ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
    - ssl_prefer_server_ciphers   on
    - auth_basic "Restricted"
    - auth_basic_user_file auth_basic/monitoring
    - |
      location / {
        proxy_pass http://127.0.0.1:9090/;
        proxy_redirect     default;
        proxy_http_version 1.1;

        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_max_temp_file_size 0;

        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_request_buffering    off;
      }
  metrics_http:
    - listen 80
    - server_name metrics.{{ ansible_host }}
    - return 301 https://$host$request_uri
  metrics_https:
    - listen 443 ssl
    - server_name metrics.{{ ansible_host }}
    - gzip on
    - gzip_types *
    - ssl_certificate /etc/ssl_certs/{{ ansible_host }}/fullchain.pem
    - ssl_certificate_key /etc/ssl_certs/{{ ansible_host }}/private.pem
    - ssl_protocols TLSv1.1 TLSv1.2
    - ssl_session_cache shared:SSL:10m
    - ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
    - ssl_prefer_server_ciphers   on
    - |
      location / {
        proxy_pass http://127.0.0.1:3000/;
        proxy_redirect     default;
        proxy_http_version 1.1;

        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_max_temp_file_size 0;

        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_request_buffering    off;
      }

nginx_auth_basic_files:
  monitoring:
    - user:changeme


