#!/usr/bin/env -S ansible-playbook -e @vars/extra.yaml
#
# Playbook to install and run backup reporter or collector in cron job
#
# > ./run-backup-reporter.yml
---
- name: Install and configure backup reporter
  hosts: backup_reporters, backup_collectors
  remote_user: root
  tasks:
    - name: Ensure defaults
      ansible.builtin.set_fact:
        backup_reporter_config_dir: "{{ backup_reporter_config_dir | default('/etc/backup-reporter') }}"
        backup_reporter_python_executable: "{{ backup_reporter_python_executable | default('python3') }}"
        backup_reporter_defaults:
          backup_reporter_config_name: 'backup_reporter_config.yml'
          backup_reporter_google_spreadsheet_credentials: ''
          backup_reporter_docker_postgres: False
          backup_reporter_container_name: 'None'
          backup_reporter_files_bucket: False
          backup_reporter_files: False
          backup_reporter_files_mask: '*.tar.gz'
          backup_reporter_backups_dir: '/var/backups'
          backup_reporter_collector: False
          backup_reporter_sheet_owner: 'None'
          backup_reporter_spreadsheet_name: 'None'
          backup_reporter_worksheet_name: 'None'
          backup_reporter_bucket: []
          backup_reporter_customer: ''
          backup_reporter_supposed_backups_count: ''
          backup_reporter_description: ''
      tags:
        - always

    - name: Ensure variables
      ansible.builtin.set_fact:
        backup_reporter_list: "{{ backup_reporter_list | default([]) + [ backup_reporter_defaults | combine(item) ] }}"
      loop: "{{ backup_reporters }}"
      tags:
        - always

    - name: Ensure config directory
      ansible.builtin.file:
        path: "{{ backup_reporter_config_dir }}"
        state: directory
        mode: '0755'

    - name: Ensure pip is installed
      ansible.builtin.package:
        name:
          - python3-pip
          - python3-venv
          - python3-virtualenv
        state: present

    - name: Ensure pip3 is latest version and required packages installed
      ansible.builtin.pip:
        executable: pip3
        name: pip
        state: latest

    - name: Ensure virtualenv
      ansible.builtin.shell:
        cmd: "{{ backup_reporter_python_executable }} -m venv backup_reporter"
      args:
        chdir: "/opt"
        creates: "/opt/backup_reporter"

    - name: Ensure backup-reporter python package
      ansible.builtin.pip:
        virtualenv: "/opt/backup_reporter"
        name: backup-reporter
        state: latest

    - name: Set google credentials json
      ansible.builtin.copy:
        dest: "{{ backup_reporter_config_dir }}/google_creds_{{ item.backup_reporter_config_name }}"
        content: "{{ item.backup_reporter_google_spreadsheet_credentials }}"
        mode: '0700'
      loop: "{{ backup_reporter_list }}"
      when: backup_reporter_list | length > 0

    - name: Set config file
      ansible.builtin.copy:
        dest: "{{ backup_reporter_config_dir }}/{{ item.backup_reporter_config_name }}"
        content: |
          docker_postgres: {{ item.backup_reporter_docker_postgres }}
          container_name: "{{ item.backup_reporter_container_name }}"
          files_bucket: {{ item.backup_reporter_files_bucket }}
          files: {{ item.backup_reporter_files }}
          files_mask: "{{ item.backup_reporter_files_mask }}"
          backups_dir: "{{ item.backup_reporter_backups_dir }}"

          collector: {{ item.backup_reporter_collector }}

          sheet_owner: "{{ item.backup_reporter_sheet_owner }}"
          google_spreadsheet_credentials_path: "{{ backup_reporter_config_dir }}/google_creds_{{ item.backup_reporter_config_name }}"
          spreadsheet_name: "{{ item.backup_reporter_spreadsheet_name }}"
          worksheet_name: "{{ item.backup_reporter_worksheet_name }}"
          customer: "{{ item.backup_reporter_customer | default('') }}"
          supposed_backups_count: "{{ item.backup_reporter_supposed_backups_count | default('') }}"
          description: "{{ item.backup_reporter_description }}"

          bucket:
          {{ item.backup_reporter_bucket | to_nice_yaml }}
        mode: '0700'
      loop: "{{ backup_reporter_list }}"
      when: backup_reporter_list | length > 0

    - name: Set daily cron-job with reporter
      ansible.builtin.cron:
        name: "Backup report {{ item.backup_reporter_config_name }}"
        minute: "0"
        hour: "1"
        job: "/opt/backup_reporter/bin/backup-reporter --config {{ backup_reporter_config_dir }}/{{ item.backup_reporter_config_name }}"
      loop: "{{ backup_reporter_list }}"
      when: backup_reporter_list | length > 0

    - name: Explicitly run report command
      ansible.builtin.shell:
        cmd: "/opt/backup_reporter/bin/backup-reporter --config {{ backup_reporter_config_dir }}/{{ item.backup_reporter_config_name }}"
      loop: "{{ backup_reporter_list }}"
      when: backup_reporter_list | length > 0
      tags:
        - never
        - report
